# -*- coding: utf-8 -*-
"""MAP_TA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SV8RtzrL4Hnbh7vcXDeDhinacEWnSB1z
"""

!pip install GEOS

pip install basemap

from mpl_toolkits.basemap import Basemap
import numpy as np
import matplotlib.pyplot as plt

pip install transbigdata

import transbigdata as tbd
fig=plt.figure(figsize=(12, 6))

# Define the boundaries for Lampung Province in latitude and longitude
llcrnrlon = 104.0  # lower left corner longitude
llcrnrlat = -6.5  # lower left corner latitude
urcrnrlon = 106.5  # upper right corner longitude
urcrnrlat = -4.5  # upper right corner latitude

# Create a Basemap instance
m = Basemap(
    llcrnrlon=llcrnrlon,
    llcrnrlat=llcrnrlat,
    urcrnrlon=urcrnrlon,
    urcrnrlat=urcrnrlat,
    rsphere=(6378137.00, 6356752.3142),
    resolution='i',
    projection='merc',
    lat_0=(llcrnrlat + urcrnrlat) / 2,
    lon_0=(llcrnrlon + urcrnrlon) / 2,
    lat_ts=(llcrnrlat + urcrnrlat) / 2
)

m.drawcoastlines()
m.drawcountries()
m.drawstates()

m.drawparallels(range(int(llcrnrlat), int(urcrnrlat) + 1), labels=[1, 0, 0, 0])
m.drawmeridians(range(int(llcrnrlon), int(urcrnrlon) + 1), labels=[0, 0, 0, 1])

alts_lon = [105.311]
alts_lat = [-5.36]
xpt,ypt = m(alts_lon,alts_lat)
m.plot(xpt,ypt, marker= 'o',color='red')
m.scatter(xpt,ypt,marker='o',color='red',label='Lokasi pengambilan data')
m.drawcoastlines()
m.fillcontinents()
m.drawparallels(np.arange(-90,90,2),labels=[1,1,0,1])
m.drawmeridians(np.arange(-180,180,2),labels=[1,1,0,1])

m.drawmapscale(104.5, -6.35, 106.5, -4.5, 50, barstyle='fancy', units='km', fontsize=9, yoffset=None, labelstyle='simple', fontcolor='k', fillcolor1='w', fillcolor2='k', ax=None, format='%d', zorder=None)

province_name = 'Lampung'
province_lat = (llcrnrlat + urcrnrlat) / 2
province_lon = (llcrnrlon + urcrnrlon) / 2
plt.annotate(province_name, (province_lon, province_lat),
             xytext=(180, 220), textcoords='offset points',
             ha='center', va='center', fontsize=18, fontweight='bold', color='black')

plt.legend(loc='upper right')
plt.show()

import folium

# Coordinates for the center of Lampung Province
lampung_coords = (-4.8796, 105.2303)

# Create a folium map centered at Lampung Province
lampung_map = folium.Map(location=lampung_coords, zoom_start=9)

# Add a marker at the center of Lampung Province
folium.Marker(location=lampung_coords, popup='Lampung Province').add_to(lampung_map)

# Display the map
lampung_map

import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.basemap import Basemap

# Define the boundaries for Lampung Province in latitude and longitude
llcrnrlon = 104.0  # lower left corner longitude
llcrnrlat = -6.5  # lower left corner latitude
urcrnrlon = 106.5  # upper right corner longitude
urcrnrlat = -4.5  # upper right corner latitude

# Create a Basemap instance
m = Basemap(
    llcrnrlon=llcrnrlon,
    llcrnrlat=llcrnrlat,
    urcrnrlon=urcrnrlon,
    urcrnrlat=urcrnrlat,
    rsphere=(6378137.00, 6356752.3142),
    resolution='i',
    projection='merc',
    lat_0=(llcrnrlat + urcrnrlat) / 2,
    lon_0=(llcrnrlon + urcrnrlon) / 2,
    lat_ts=(llcrnrlat + urcrnrlat) / 2
)

# Draw coastlines, countries, and states
m.drawcoastlines()
m.drawcountries()
m.drawstates()

# Draw parallels and meridians
m.drawparallels(np.arange(int(llcrnrlat), int(urcrnrlat) + 1), labels=[1, 0, 0, 0])
m.drawmeridians(np.arange(int(llcrnrlon), int(urcrnrlon) + 1), labels=[0, 0, 0, 1])

# Add a red marker for the location
alts_lon = [105.311]
alts_lat = [-5.36]
xpt, ypt = m(alts_lon, alts_lat)
m.plot(xpt, ypt, marker='o', color='red')
m.scatter(xpt, ypt, marker='o', color='red', label='Lokasi pengambilan data')

# Add the name of the province at the center of the map using plt.annotate
province_name = 'Lampung'
province_lat = (llcrnrlat + urcrnrlat) / 2
province_lon = (llcrnrlon + urcrnrlon) / 2
plt.annotate(province_name, (province_lon, province_lat),
             xytext=(0, 10), textcoords='offset points',
             ha='center', va='center', fontsize=14, fontweight='bold', color='black')

# Draw map scale
m.drawmapscale(104.5, -6.3, 106.5, -4.5, 50, barstyle='fancy', units='km', fontsize=9, labelstyle='simple')

# Add a symbol for north (arrow)
north_lon, north_lat = (province_lon, urcrnrlat)
arrow_size = 1  # Adjust the arrow size as needed
plt.arrow(north_lon, north_lat, 0, 0.1 * arrow_size, color='blue', width=0.02 * arrow_size, head_width=0.05 * arrow_size, head_length=0.05 * arrow_size, zorder=5)

# # ax.annotate("", xy=(0.5, 0.5), xytext=(0, 0),
#             arrowprops=dict(arrowstyle="->"))
# # Show the plot
plt.legend(loc='upper right')
plt.show()

from mpl_toolkits.basemap import Basemap
import matplotlib.pyplot as plt

# Define the boundaries for Lampung Province in latitude and longitude
llcrnrlon = 104.0  # lower left corner longitude
llcrnrlat = -6.5  # lower left corner latitude
urcrnrlon = 106.5  # upper right corner longitude
urcrnrlat = -4.5  # upper right corner latitude

# Create a Basemap instance
m = Basemap(
    llcrnrlon=llcrnrlon,
    llcrnrlat=llcrnrlat,
    urcrnrlon=urcrnrlon,
    urcrnrlat=urcrnrlat,
    rsphere=(6378137.00, 6356752.3142),
    resolution='i',
    projection='merc',
    lat_0=(llcrnrlat + urcrnrlat) / 2,
    lon_0=(llcrnrlon + urcrnrlon) / 2,
    lat_ts=(llcrnrlat + urcrnrlat) / 2
)

# Draw coastlines, countries, and states
m.drawcoastlines()
m.drawcountries()
m.drawstates()

# Draw parallels and meridians
m.drawparallels(range(int(llcrnrlat), int(urcrnrlat) + 1), labels=[1, 0, 0, 0])
m.drawmeridians(range(int(llcrnrlon), int(urcrnrlon) + 1), labels=[0, 0, 0, 1])

# Add a title
plt.title('Basemap for Lampung Province')

# Show the plot
plt.show()

from mpl_toolkits.basemap import Basemap
import matplotlib.pyplot as plt
# fig=plt.figure(figsize=(12, 6))
# Define the boundaries for Lampung Province in latitude and longitude
llcrnrlon = 104.0  # lower left corner longitude
llcrnrlat = -6.5  # lower left corner latitude
urcrnrlon = 106.5  # upper right corner longitude
urcrnrlat = -4.5  # upper right corner latitude

# Create a Basemap instance
m = Basemap(
    llcrnrlon=llcrnrlon,
    llcrnrlat=llcrnrlat,
    urcrnrlon=urcrnrlon,
    urcrnrlat=urcrnrlat,
    rsphere=(6378137.00, 6356752.3142),
    resolution='i',
    projection='merc',
    lat_0=(llcrnrlat + urcrnrlat) / 2,
    lon_0=(llcrnrlon + urcrnrlon) / 2,
    lat_ts=(llcrnrlat + urcrnrlat) / 2
)

# Draw coastlines, countries, and states
m.drawcoastlines()
m.drawcountries()
m.drawstates()

# Draw parallels and meridians
m.drawparallels(range(int(llcrnrlat), int(urcrnrlat) + 1), labels=[1, 0, 0, 0])
m.drawmeridians(range(int(llcrnrlon), int(urcrnrlon) + 1), labels=[0, 0, 0, 1])

# Fill Lampung Province with a specific color
m.fillcontinents(color='gray', lake_color='lightblue')

# Add a title
plt.title('Basemap for Lampung Province')

# Show the plot
plt.show()

pip install cartopy

import matplotlib.pyplot as plt
import cartopy.crs as ccrs
import cartopy.feature as cfeature


# Define the boundaries for Lampung Province in latitude and longitude
llcrnrlon = 104.0  # lower left corner longitude
llcrnrlat = -6.5  # lower left corner latitude
urcrnrlon = 106.5  # upper right corner longitude
urcrnrlat = -4.5  # upper right corner latitude

# Create a Cartopy map
fig, ax = plt.subplots(subplot_kw={'projection': ccrs.PlateCarree()})
ax.set_extent([llcrnrlon, urcrnrlon, llcrnrlat, urcrnrlat])

# Add natural features
ax.add_feature(cfeature.BORDERS, linestyle=':')
ax.add_feature(cfeature.COASTLINE, linewidth=1.5)
ax.add_feature(cfeature.LAND, color='gray', edgecolor='black')
ax.add_feature(cfeature.LAKES, color='blue', edgecolor='black')

# Draw parallels and meridians
ax.gridlines(draw_labels=True, linewidth=0.5, color='gray', alpha=0.5, linestyle='--')

# m.drawmapscale(104.5, -5, 106., -4, 100, barstyle='fancy', units='km', fontsize=9, yoffset=None, labelstyle='simple', fontcolor='k', fillcolor1='w', fillcolor2='k', ax=None, format='%d', zorder=None)

# Add a title
plt.title('Peta Provinsi Lampung')

# Show the plot
plt.show()

import matplotlib.pyplot as plt
import cartopy.crs as ccrs
import cartopy.feature as cfeature
from cartopy.mpl.gridliner import LONGITUDE_FORMATTER, LATITUDE_FORMATTER
from cartopy.feature import NaturalEarthFeature

# Define the boundaries for Lampung Province in latitude and longitude
llcrnrlon = 104.0  # lower left corner longitude
llcrnrlat = -6.5  # lower left corner latitude
urcrnrlon = 106.5  # upper right corner longitude
urcrnrlat = -4.5  # upper right corner latitude

# Create a Cartopy map
fig, ax = plt.subplots(subplot_kw={'projection': ccrs.PlateCarree()})
ax.set_extent([llcrnrlon, urcrnrlon, llcrnrlat, urcrnrlat])

# Add natural features
ax.add_feature(cfeature.BORDERS, linestyle=':')
ax.add_feature(cfeature.COASTLINE, linewidth=1.5)
ax.add_feature(cfeature.LAND, color='lightgreen', edgecolor='black')
ax.add_feature(cfeature.LAKES, color='lightblue', edgecolor='black')

# Draw parallels and meridians
gl = ax.gridlines(draw_labels=True, linewidth=0.5, color='gray', alpha=0.5, linestyle='--')
gl.xlabels_top = gl.ylabels_right = False
gl.xformatter = LONGITUDE_FORMATTER
gl.yformatter = LATITUDE_FORMATTER

# Add a title
plt.title('Map of Lampung Province')

# Add a scale bar
# ax.add_feature(cfeature.LAND, color='white')  # Make land white for better visibility
# scale_bar = cfeature.scale_bar(ax.transData, length=100, location='lower right')
# ax.add_feature(scale_bar)

# Add compass points
ax.text(0.95, 0.95, 'N', transform=ax.transAxes, ha='center', va='center', fontsize=12)
ax.text(0.95, 0.05, 'S', transform=ax.transAxes, ha='center', va='center', fontsize=12)
ax.text(0.05, 0.95, 'E', transform=ax.transAxes, ha='center', va='center', fontsize=12)
ax.text(0.05, 0.05, 'W', transform=ax.transAxes, ha='center', va='center', fontsize=12)

# Show the plot
plt.show()

import folium

# Coordinates for the center of Lampung Province
lampung_coords = (-4.8796, 105.2303)

# Create a folium map centered at Lampung Province
lampung_map = folium.Map(location=lampung_coords, zoom_start=9)

# Display the map
lampung_map