# -*- coding: utf-8 -*-
"""TCC_TA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/152pOvy77Y58PDAT0hCc_p9Pi5NLjy50_
"""

pip install netCDF4

pip install basemap

from netCDF4 import Dataset
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from mpl_toolkits.basemap import Basemap, maskoceans
#Reading the netcdf file
data = Dataset(r'tccnew.nc','r')
#Accessing the data from variables
time_data = data.variables['time'][:]
lon_data = data.variables['longitude'][:]
lat_data = data.variables['latitude'][:]
tcc = data.variables['tcc'][:]

mp = Basemap(
    llcrnrlon = 104,
    llcrnrlat = -6,
    urcrnrlon = 106,
    urcrnrlat = -5,
    resolution = 'i',projection='merc')
lon, lat = np.meshgrid(lon_data, lat_data)
x, y = mp(lon, lat)

for i in range(len(time_data)):
    cloud=mp.contourf(x, y, np.squeeze(tcc[i,:,:]), cmap = 'jet')#, vmin=0, vmax=20)
    mp.bluemarble()
    mp.drawparallels(np.arange(-6,-5,0.25),labels=[1,0,0,0],fontsize=10)
    mp.drawmeridians(np.arange(104,106,0.25),labels=[0,0,0,1],fontsize=10)
    mp.drawcoastlines()
    mp.drawstates()
    mp.drawcountries()
    mp.colorbar(cloud, location = 'right', pad = '10%')
    if i >= 24 :
        plt.title('Total Cloud Cover 23 Maret 2023\nJam '+str(i-24)+'.00 UTC')
    else:
        plt.title('Total Cloud Cover 22 Maret 2023\nJam '+str(i)+'.00 UTC')
    plt.savefig(r'Bryan'+'\\'+str(i)+'.jpg')
    plt.clf()

# from PIL import Image
# import numpy as np
# frames=[]

# foto=np.arange(0,47)

# for k in foto:
#     new_fram = Image.open(r'tcc' + '\\' + str(k) + '.jpg')
#     frames.append(new_fram)

# frames[0].save('TCCnew.gif',format='GIF',
#                     append_images = frames[1: ],
#                     save_all = True, duration = 500,
#                     loop = 0)

pip install Pillow

import glob
from PIL import Image
def make_gif(frame_folder):
    frames = [Image.open(image) for image in glob.glob(f"{frame_folder}/*.JPG")]
    frame_one = frames[0]
    frame_one.save("my_awesome.gif", format="GIF", append_images=frames,
               save_all=True, duration=100, loop=0)

if __name__ == "__main__":
    make_gif("/path/to/images")

from PIL import Image

# List of image file names
image_files = ["tcc1.png", "tcc2.png", "tcc3.png", "tcc4.png", "tcc5.png", "tcc6.png", "tcc7.png", "tcc8.png", "tcc9.png", "tcc10.png", "tcc11.png", "tcc12.png", "tcc13.png", "tcc14.png", "tcc15.png", "tcc16.png", "tcc17.png", "tcc18.png", "tcc19.png", "tcc20.png", "tcc21.png", "tcc22.png", "tcc23.png", "tcc24.png"]

# Open the first image to get its size
first_image = Image.open(image_files[0])
width, height = first_image.size

# Create a new image with the same size as the first image
gif = Image.new("RGB", (width, height))

# Create a list to store each frame
frames = []

# Iterate through each image and append it to the frames list
for image_file in image_files:
    img = Image.open(image_file)
    frames.append(img)

# Save the frames as a GIF
frames[0].save(
    "output.gif",
    save_all=True,
    append_images=frames[1:],
    duration=500,  # Adjust the duration between frames in milliseconds
    loop=0,  # Set loop to 0 for infinite loop
)

